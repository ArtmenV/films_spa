{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport types from './actionTypes';\nimport * as api from '../api';\nimport pagination from '../pagination';\nconst {\n  paginationActions\n} = pagination;\nexport const moviesIsLoading = createAction(types.MOVIE_IS_LOADING);\nexport const setMovies = createAction(types.SET_MOVIES); //---------------------------- Thunks\n\nexport const getMovies = () => (dispatch, getState) => {\n  const {\n    pagination: {\n      currentPage\n    },\n    activeTab\n  } = getState();\n  let movieApi;\n  const config = {\n    params: {\n      page: currentPage\n    }\n  };\n  dispatch(moviesIsLoading(true));\n\n  switch (activeTab) {\n    case 'popular':\n      movieApi = api.getPopularMovies;\n      break;\n\n    case 'top-rated':\n      movieApi = api.getTopRatedMovies;\n      break;\n  }\n\n  movieApi(config).then(res => {\n    dispatch(paginationActions.setTotalPages(res.data.total_pages));\n    dispatch(setMovies(res.data.results));\n  }).finally(() => {\n    dispatch(moviesIsLoading(false));\n  });\n};","map":{"version":3,"sources":["/home/artem/Desktop/movie/movie-data/src/movie-list/actions.js"],"names":["createAction","types","api","pagination","paginationActions","moviesIsLoading","MOVIE_IS_LOADING","setMovies","SET_MOVIES","getMovies","dispatch","getState","currentPage","activeTab","movieApi","config","params","page","getPopularMovies","getTopRatedMovies","then","res","setTotalPages","data","total_pages","results","finally"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAwBD,UAA9B;AAEA,OAAO,MAAME,eAAe,GAAGL,YAAY,CAACC,KAAK,CAACK,gBAAP,CAApC;AACP,OAAO,MAAMC,SAAS,GAAGP,YAAY,CAACC,KAAK,CAACO,UAAP,CAA9B,C,CAGP;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,CAAEC,QAAF,EAAYC,QAAZ,KAA0B;AACvD,QAAM;AACJR,IAAAA,UAAU,EAAE;AACVS,MAAAA;AADU,KADR;AAIJC,IAAAA;AAJI,MAKFF,QAAQ,EALZ;AAOA,MAAIG,QAAJ;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEL;AADA;AADK,GAAf;AAMAF,EAAAA,QAAQ,CAACL,eAAe,CAAC,IAAD,CAAhB,CAAR;;AAEA,UAAQQ,SAAR;AACE,SAAK,SAAL;AACEC,MAAAA,QAAQ,GAAGZ,GAAG,CAACgB,gBAAf;AACA;;AACF,SAAK,WAAL;AACEJ,MAAAA,QAAQ,GAAGZ,GAAG,CAACiB,iBAAf;AACA;AANJ;;AASAL,EAAAA,QAAQ,CAACC,MAAD,CAAR,CACGK,IADH,CACQC,GAAG,IAAI;AACXX,IAAAA,QAAQ,CAACN,iBAAiB,CAACkB,aAAlB,CAAgCD,GAAG,CAACE,IAAJ,CAASC,WAAzC,CAAD,CAAR;AACAd,IAAAA,QAAQ,CAACH,SAAS,CAACc,GAAG,CAACE,IAAJ,CAASE,OAAV,CAAV,CAAR;AACD,GAJH,EAKGC,OALH,CAKW,MAAM;AACbhB,IAAAA,QAAQ,CAACL,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,GAPH;AAQD,CAnCM","sourcesContent":["import { createAction } from 'redux-actions'\nimport types from './actionTypes'\nimport * as api from '../api'\nimport pagination from '../pagination'\n\nconst { paginationActions } = pagination\n\nexport const moviesIsLoading = createAction(types.MOVIE_IS_LOADING)\nexport const setMovies = createAction(types.SET_MOVIES)\n\n\n//---------------------------- Thunks\nexport const getMovies = () => ( dispatch, getState ) => {\n  const { \n    pagination: {\n      currentPage\n    }, \n    activeTab \n  } = getState()\n\n  let movieApi\n\n  const config = {\n    params: {\n      page: currentPage\n    }\n  }\n  \n  dispatch(moviesIsLoading(true))\n\n  switch (activeTab) {\n    case 'popular':\n      movieApi = api.getPopularMovies\n      break\n    case 'top-rated':\n      movieApi = api.getTopRatedMovies\n      break\n  }\n\n  movieApi(config)\n    .then(res => {\n      dispatch(paginationActions.setTotalPages(res.data.total_pages))\n      dispatch(setMovies(res.data.results))\n    })\n    .finally(() => {\n      dispatch(moviesIsLoading(false))\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}